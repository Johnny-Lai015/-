package Software;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.ArrayList;

import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class reservationCancel {
	static void reservate(String roomNum, String checkInStart, String checkInOver) throws Exception {
		File file = new File("room.xlsx");
		FileInputStream fIP = new FileInputStream(file);
		XSSFWorkbook workbook = new XSSFWorkbook(fIP);
		int yearStart = Integer.parseInt(checkInStart.substring(3, 4)),
				yearOver = Integer.parseInt(checkInOver.substring(3, 4)),
				monthStart = Integer.parseInt(checkInStart.substring(5, 7)),
				monthOver = Integer.parseInt(checkInOver.substring(5, 7)),
				dateStart = Integer.parseInt(checkInStart.substring(8, 10)),
				dateOver = Integer.parseInt(checkInOver.substring(8, 10));
		XSSFSheet roomCheckSheet = workbook.getSheet(roomNum.substring(0, 1));
		XSSFRow row2;
		while (yearStart != yearOver || monthStart != monthOver || dateStart != dateOver) {
			row2 = roomCheckSheet.getRow(yearStart * 12 + monthStart - 1);
			if (row2.getCell(dateStart - 1).toString().equals("X")) {
				dateStart = 1;
				monthStart += 1;
			}
			if (monthStart > 12) {
				monthStart = 1;
				yearStart += 1;
			}
			row2 = roomCheckSheet.getRow(yearStart * 12 + monthStart - 1);
			row2.getCell(dateStart - 1).setCellValue("空房");
			dateStart += 1;
		}
		if (roomNum.length() > 1) {
			yearStart = Integer.parseInt(checkInStart.substring(3, 4));
			yearOver = Integer.parseInt(checkInOver.substring(3, 4));
			monthStart = Integer.parseInt(checkInStart.substring(5, 7));
			monthOver = Integer.parseInt(checkInOver.substring(5, 7));
			dateStart = Integer.parseInt(checkInStart.substring(8, 10));
			dateOver = Integer.parseInt(checkInOver.substring(8, 10));
			XSSFSheet roomCheckSheet2 = workbook.getSheet(roomNum.substring(1, 2));
			XSSFRow row3;
			while (yearStart != yearOver || monthStart != monthOver || dateStart != dateOver) {
				row3 = roomCheckSheet2.getRow(yearStart * 12 + monthStart - 1);
				if (row3.getCell(dateStart - 1).toString().equals("X")) {
					dateStart = 1;
					monthStart += 1;
				}
				if (monthStart > 12) {
					monthStart = 1;
					yearStart += 1;
				}
				row3 = roomCheckSheet2.getRow(yearStart * 12 + monthStart - 1);
				row3.getCell(dateStart - 1).setCellValue("空房");
				dateStart += 1;
			}
		}
		FileOutputStream out = new FileOutputStream(new File("room.xlsx"));
		workbook.write(out);
		out.close();
		workbook.close();
		System.out.println("finish");
	}

	static ArrayList<String> FindData(String name,String roomNum) throws Exception {
		ArrayList<String> box = new ArrayList<String>();
		File file = new File("testData.xlsx");
		FileInputStream fIP = new FileInputStream(file);
		XSSFWorkbook workbook = new XSSFWorkbook(fIP);
		XSSFSheet roomCheckSheet = workbook.getSheet("Sheet1");
		String checkInStart;
		String checkInOver;
		for (int i = 1; roomCheckSheet.getRow((short) i) != null; i++) {
			XSSFRow row = roomCheckSheet.getRow(i);
			System.out.println(name + "\n" + row.getCell(0).toString());
			if (name.equals(row.getCell(0).toString())) {
				if(roomNum.equals(row.getCell(6).toString())) {
					checkInStart = row.getCell(4).toString();
					checkInOver = row.getCell(5).toString();
					roomNum = row.getCell(6).toString();
					box.add(checkInStart);
					box.add(checkInOver);
					box.add(roomNum);
				}
			}
		}
		workbook.close();
		return box;

	}
}
